apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubernetes-event-exporter.fullname" . }}
  labels:
    {{- include "kubernetes-event-exporter.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubernetes-event-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "kubernetes-event-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubernetes-event-exporter.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -conf=/data/config.yaml
          env:
            {{- if .Values.aws.enabled }}
            - name: AWS_REGION
              value: {{ .Values.aws.region | quote }}
            {{- if .Values.aws.existingSecret }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.existingSecret }}
                  key: {{ .Values.aws.secretKeys.accessKeyId }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.existingSecret }}
                  key: {{ .Values.aws.secretKeys.secretAccessKey }}
            {{- if .Values.aws.secretKeys.sessionToken }}
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.aws.existingSecret }}
                  key: {{ .Values.aws.secretKeys.sessionToken }}
            {{- end }}
            {{- else if .Values.aws.credentials.accessKeyId }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes-event-exporter.fullname" . }}-aws
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes-event-exporter.fullname" . }}-aws
                  key: AWS_SECRET_ACCESS_KEY
            {{- if .Values.aws.credentials.sessionToken }}
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubernetes-event-exporter.fullname" . }}-aws
                  key: AWS_SESSION_TOKEN
            {{- end }}
            {{- end }}
            {{- end }}
            - name: CLUSTER_NAME
              value: {{ .Values.cluster.name | quote }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: /data
              name: config
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ .Values.existingConfigMap | default (include "kubernetes-event-exporter.fullname" .) }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 